<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.unicom.tancms.mapper.ActionLogMapper" >
  <resultMap id="BaseResultMap" type="com.unicom.tancms.pojo.ActionLog" >
    <id column="LOG_ID" property="logId" jdbcType="BIGINT" />
    <result column="LOG_IP" property="logIp" jdbcType="VARCHAR" />
    <result column="GEN_TIME" property="genTime" jdbcType="TIMESTAMP" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    LOG_ID, LOG_IP, GEN_TIME, USER_ID, CONTENT, TYPE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.unicom.tancms.pojo.ActionLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from action_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from action_log
    where LOG_ID = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from action_log
    where LOG_ID = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.unicom.tancms.pojo.ActionLogExample" >
    delete from action_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.unicom.tancms.pojo.ActionLog" >
    insert into action_log (LOG_ID, LOG_IP, GEN_TIME, 
      USER_ID, CONTENT, TYPE
      )
    values (#{logId,jdbcType=BIGINT}, #{logIp,jdbcType=VARCHAR}, #{genTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.unicom.tancms.pojo.ActionLog" >
    insert into action_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        LOG_ID,
      </if>
      <if test="logIp != null" >
        LOG_IP,
      </if>
      <if test="genTime != null" >
        GEN_TIME,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="logIp != null" >
        #{logIp,jdbcType=VARCHAR},
      </if>
      <if test="genTime != null" >
        #{genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.unicom.tancms.pojo.ActionLogExample" resultType="java.lang.Integer" >
    select count(*) from action_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update action_log
    <set >
      <if test="record.logId != null" >
        LOG_ID = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.logIp != null" >
        LOG_IP = #{record.logIp,jdbcType=VARCHAR},
      </if>
      <if test="record.genTime != null" >
        GEN_TIME = #{record.genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        CONTENT = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update action_log
    set LOG_ID = #{record.logId,jdbcType=BIGINT},
      LOG_IP = #{record.logIp,jdbcType=VARCHAR},
      GEN_TIME = #{record.genTime,jdbcType=TIMESTAMP},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      CONTENT = #{record.content,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.unicom.tancms.pojo.ActionLog" >
    update action_log
    <set >
      <if test="logIp != null" >
        LOG_IP = #{logIp,jdbcType=VARCHAR},
      </if>
      <if test="genTime != null" >
        GEN_TIME = #{genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.unicom.tancms.pojo.ActionLog" >
    update action_log
    set LOG_IP = #{logIp,jdbcType=VARCHAR},
      GEN_TIME = #{genTime,jdbcType=TIMESTAMP},
      USER_ID = #{userId,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=INTEGER}
    where LOG_ID = #{logId,jdbcType=BIGINT}
  </update>
</mapper>